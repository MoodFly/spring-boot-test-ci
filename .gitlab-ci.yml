default:
  image: 'maven:3.6.3-openjdk-8'

stages:
  - prepare
  - test
  - analysis
  - package
  - deploy

prepare:
  stage: prepare
  cache:
    key: m_m2
    paths:
      - .m2/repository/
  script:
    - mvn -v && java -version
    - mvn clean install -s settings.xml
  tags:
    - SHARE_MAVEN_JDK

tests:
  stage: test
  cache:
    key: m_m2
    policy: pull
    paths:
      - .m2/repository/
  script:
    - mvn clean install -P tests -s settings.xml
  artifacts:
    when: on_success
    paths:
      - target/failsafe-reports
      - target/surefire-reports
      - target/classes
      - target/test-classes
      - target/site
      - target/*.exec
  coverage: '/Code coverage: \d+\.\d+/'
  tags:
    - SHARE_MAVEN_JDK

analysis:
  stage: analysis
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: ['']
  variables:
    SONAR_TOKEN: '67296badea93b1a60d324330852a6256a1fec8b4'
    ## sonar server ip
    SONAR_HOST_URL: "http://localhost:9000"
    GIT_DEPTH: 0
    SONAR_PROJECT_BASE_DIR: ./
  script:
    - pwd
    - ls -l
    - sonar-scanner -Dsonar.qualitygate.wait=true
  tags:
    - SONAR_SCANNER
  only:
    - master

package:
  stage: package
  cache:
    key: m_m2
    policy: pull-push
    paths:
      - .m2/repository/
  script:
    - mvn clean install -P skipTests -s settings.xml
  artifacts:
    when: on_success
    paths:
      - target/spring-boot-test-ci-1.0.0.jar
  tags:
    - SHARE_MAVEN_JDK

deploy:
  stage: deploy
  image: ictu/sshpass:latest
  script:
    - pwd
    - ls -l
    - ls ./target/
    - sshpass -p ci scp -o StrictHostKeyChecking=no target/spring-boot-test-ci-1.0.0.jar ci@localhost:/home/ci/appsrc/spring-boot-ci/spring-boot-test-ci.jar
    - sshpass -p ci scp -o StrictHostKeyChecking=no deploy/Dockerfile ci@localhost:/home/ci/appsrc/spring-boot-ci/Dockerfile
    - sshpass -p ci scp -o StrictHostKeyChecking=no deploy/docker-compose.yml ci@localhost:/home/ci/appsrc/spring-boot-ci/docker-compose.yml
#    - sshpass -p ci ssh -o StrictHostKeyChecking=no ci@localhost 'docker build -f /home/ci/appsrc/spring-boot-ci/Dockerfile -t spring-boot-test-ci:v1 /home/ci/appsrc/spring-boot-ci/'
    - sshpass -p ci ssh -o StrictHostKeyChecking=no ci@localhost 'docker stop spring-boot-ci'
    - sshpass -p ci ssh -o StrictHostKeyChecking=no ci@localhost 'docker-compose -f /home/ci/appsrc/spring-boot-ci/docker-compose.yml up -d --build'
  tags:
    - SSH_REMOTE_DEPLOY
  only:
    - master

